{"version":3,"sources":["components/Grid.js","components/InputForm.js","App.js","serviceWorker.js","index.js"],"names":["Grid","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","height","width","grid","trees","lumber","ground","counter","running","looper","pause","bind","assertThisInitialized","play","everyMinute","resetInput","input","split","map","row","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","entries","Symbol","iterator","next","done","_ref3","value","_ref2","slicedToArray","y","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_ref6","_ref5","x","symbol","push","err","return","setState","length","setInterval","clearInterval","handleInputChange","surrounds","n","count","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","coord","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","coords","_this2","prevState","_","new_grid","Array","fill","new_trees","new_lumber","new_ground","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","get_surrounding","has_surrounding_trees","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","has_surrounding_lumber","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","playPause","items","_this3","react_default","a","createElement","onClick","display","j","key","e","i","style","color","customText","customEmoji","background","customColor","className","Component","InputForm","text","valid","empty","handleChange","handleSubmit","useDefault","resetText","test","event","target","validateInput","preventDefault","onInputChange","warning","onSubmit","href","rows","onChange","type","disabled","App","groundText","lumberText","treeText","groundColor","lumberColor","treeColor","groundEmoji","lumberEmoji","treeEmoji","handleDisplayChange","handleCustomChange","handleEmoji","defineProperty","name","Main","selection","components_Grid","#","|",".","components_InputForm","htmlFor","id","role","checked","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.691263ac.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Grid extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      height: 0,\n      width: 0,\n      grid: null,\n      trees: [],\n      lumber: [],\n      ground: [],\n      counter: 0,\n      running: false,\n      looper: null,\n    }\n    this.pause = this.pause.bind(this)\n    this.play = this.play.bind(this)\n    this.everyMinute = this.everyMinute.bind(this)\n    this.resetInput = this.resetInput.bind(this)\n  }\n\n  componentDidMount() {\n    const grid = this.props.input.split(/\\n/).map(row => row.split(''))\n    const trees = []\n    const lumber = []\n    const ground = []\n    for (const [y, row] of grid.entries()) {\n      for (const [x, symbol] of row.entries()) {\n        if (symbol === \"|\") {\n          trees.push({x, y})\n        }\n        else if (symbol === \"#\") {\n          lumber.push({x, y})\n        }\n        else if (symbol === \".\") {\n          ground.push({x, y})\n        }\n      }\n    }\n    this.setState({counter: 0, grid, lumber, ground, trees, running: true, height: grid.length, width: grid[0].length})\n    const looper = setInterval(this.everyMinute, 80) \n    this.setState({looper})\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.looper)\n  }\n\n\n  resetInput(){\n    clearInterval(this.state.looper)\n    this.setState({counter: 0, input: null, height: 0, width: 0, grid: null, trees: [], lumber: [], ground: [], running: false})\n    this.props.handleInputChange(null)\n  }\n\n  pause(){\n    clearInterval(this.state.looper)\n    this.setState({running: false})\n  }\n\n  play(){\n    const looper = setInterval(this.everyMinute, 80) \n    this.setState({looper, running: true})\n  }\n\n  has_surrounding_trees(surrounds, n, grid) {\n    let count = 0\n    for (const coord of surrounds) {\n      if (grid[coord.y][coord.x] === \"|\") {count += 1}\n      if (count >= n) { return true }\n    }\n    return false\n  }\n\n  has_surrounding_lumber(surrounds, n, grid) {\n    let count = 0    \n    for (const coord of surrounds) {\n      if (grid[coord.y][coord.x] === \"#\") {count += 1}\n      if (count >= n) { return true }\n    }\n    return false\n  }\n\n  get_surrounding(coords) {\n    const surrounds = []\n    const x = coords.x\n    const y = coords.y\n    if (y > 0) { surrounds.push({y: y - 1, x: x}) }\n    if (y > 0 && x < (this.state.width - 1)) { surrounds.push({y: y - 1, x: x + 1}) }\n    if (x < (this.state.width - 1)) { surrounds.push({y, x: x + 1}) }\n    if (y < (this.state.height - 1) && x < (this.state.width - 1)) { surrounds.push({y: y + 1, x: x + 1}) }\n    if (y < (this.state.height - 1)) { surrounds.push({y: y + 1, x}) }\n    if (y <  (this.state.height - 1) && x > 0) { surrounds.push({y: y + 1, x: x - 1}) }\n    if (x > 0) { surrounds.push({y, x: x - 1}) }\n    if (y > 0 && x > 0) { surrounds.push({y: y - 1, x: x - 1}) }\n    return surrounds\n  }\n\n  everyMinute() {\n    this.setState((prevState, _) => {\n      const new_grid = new Array(prevState.height).fill(null).map(x => new Array(prevState.width).fill('.'))\n      const new_trees = []\n      const new_lumber =[]\n      const new_ground = []\n      for (const coord of prevState.ground) {\n        const surrounds = this.get_surrounding(coord)\n        if (this.has_surrounding_trees(surrounds, 3, prevState.grid)) {\n          new_trees.push(coord)\n          new_grid[coord.y][coord.x] = '|'\n        } else {\n          new_ground.push(coord)\n        }\n      }\n      for (const coord of prevState.trees) {\n        const surrounds = this.get_surrounding(coord)\n        if (this.has_surrounding_lumber(surrounds, 3, prevState.grid)) {\n          new_lumber.push(coord)\n          new_grid[coord.y][coord.x] = '#'\n        } else {\n          new_trees.push(coord)\n          new_grid[coord.y][coord.x] = '|'\n        }\n      }\n  \n     for (const coord of prevState.lumber) {\n      const surrounds = this.get_surrounding(coord, prevState.grid)\n       if (this.has_surrounding_lumber(surrounds, 1, prevState.grid) && this.has_surrounding_trees(surrounds, 1, prevState.grid)) {\n         new_lumber.push(coord)\n         new_grid[coord.y][coord.x] = \"#\"\n       } else {\n         new_ground.push(coord)\n       }\n     }\n\n      return { counter: prevState.counter + 1,\n        trees: new_trees,\n        lumber: new_lumber,\n        ground: new_ground,\n        grid: new_grid }\n    })\n  }\n\n  \n  render() {\n    let playPause;\n    if (this.state.running) {\n      playPause = <button onClick={this.pause}> Pause </button>\n    } else {\n      playPause = <button onClick={this.play}> Play </button>\n    }\n\n    let items;\n    if (this.state.grid) {\n      if (this.props.display === \"display-text\") {\n        items = this.state.grid.map(\n          (row, j)  => <tr key={j}> {row.map( (e, i) => <td key={i} style={{color: this.props.customText[e]}}>{e}</td> )}</tr>)\n      } else if (this.props.display === \"display-emoji\") {\n        items = this.state.grid.map(\n          (row, j)  => <tr key={j}> {row.map( (e, i) => <td key={i}><span>{this.props.customEmoji[e]}</span></td> )}</tr>)\n      } else if (this.props.display === \"display-solid-color\") {\n        items = this.state.grid.map(\n          (row, j) => <tr key={j}> {row.map( (e, i) => <td key={i} style={{background: this.props.customColor[e]}}></td> )}</tr>)\n      }\n    }\n    return (\n      <div className=\"grid\">\n      <div className=\"flex-apart\">\n        <div className=\"grid-control\">\n          <button onClick={this.resetInput}> Reset Input </button>\n          {playPause}\n        </div>\n        <p className=\"counter\">{this.state.counter}</p>\n      </div>\n      <table>\n        <tbody>\n        {items}\n        </tbody>\n      </table>\n      </div>\n  )}\n\n}\nexport default Grid","import React, { Component } from 'react'\n\nclass InputForm extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      text: '',\n      valid: false,\n      empty: true,\n    }\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.useDefault = this.useDefault.bind(this)\n    this.resetText = this.resetText.bind(this)\n  }\n\n  validateInput(value) {\n    return /^([\\|\\.#]+\\n*)+$/.test(value)\n  }\n\n  resetText(){\n    this.setState({text: '', valid: false, empty: true})\n  }\n\n  useDefault(){\n    this.setState({ valid: true, text: \"..##..#|#..#.#.||........|||...#..|....||......|..\\n##.#.#....##..###...##|#...|...||.#...#|.|.#...#|.\\n....##|....|#.........#|..|......#...##.#..|....##\\n###...||#|.......#|..#.#||...|....|......||..|..|.\\n......||.|.....#.#####.#.#.|...|##....#...#.......\\n#..|..#.|.......#......#.#|.........|##....##.||#.\\n|##..#|...|.#.....#..|.||#.|..##..#...||#.#.|.....\\n...|.#.|....||...#.||#|...|..#.#........|.|||....#\\n..|||#.|...#.##.||.......#.|.#.|..|#|..|.|##.#...#\\n|#...#.....#...#...#||..|.......|.|..|.##..#.#..#.\\n......||...#.#||...|.||.|#.|..##|.||....#..##.##..\\n#|........#|...|#.|.||#||...#..|#...#...##.|.|....\\n|#.||..##|#.|.|....#.#.......|.#.|.|.#.....#.|....\\n....###.|.#...|#.|##.||....|#.#....#...|...||.|..#\\n.....#..#|..|#.#..###..#.|#.....###.|......#|.#.|.\\n||.##....|....#..||#.#....|.##.|...#.|##..........\\n#|#.#..|..|#....#.#.|..||...|..........#|.........\\n.#|.##..|.|.|..#|...|..|..|.#....|#|.....#|.#...|.\\n|....|.|..#..#|..#.###.|||......|.###..|..........\\n#|#.#.......|...|||.||##.....##..||...|..##...##..\\n.|||...#.|....##....#..#..........|..#..........|.\\n.#....#...#..##....#.#......||...##....|...#..|.|.\\n|||....||#....|...|.....#.#..||.|.|..#..|...||....\\n###...|#|...|...||.##.#....|.....##....#|#.#|#||.#\\n..#.|....#|.|..#......#..|..|#|....#.......#.|#..|\\n.##..|#.|......|..#.##..#.#....|#.....#...|.....#.\\n.|.|.....|..|..|..........|....#..##..#|.##.|..||#\\n|..#.|.|..#......#||...||.#..#..|.......|.#.|.....\\n|....|.#..#||....|#.#|....#|..#|.#.|##.....|.||.#.\\n....|#.||.#..#....||||..|.|#.|#...|..|#.#.#|#..###\\n#....#.#..|..#|.|.|..||.#......|......|.|......#|#\\n|##|......||.#...#......#.|..||....|.#..........#.\\n##...|...#.....#...|.#..||...|.#|.##...|.#...#.|..\\n...|..||...#.#....#|.#...###......#|#.|.|.#|.....#\\n.#||...##....|...##.#|.#.#..#.........#..#....||#.\\n....#.....|..|.|..#|.......|.|..#....#|.#......#.#\\n........#.|....#..|..|..|...|.|#|.#.#......#|..||.\\n...#...#..#.||#|||...#.|........|#.#|........###.#\\n###..#.|..|...||..||......|##.||...#.|.|##.|.#|##|\\n|#||||#|..|..|..||.....#|.#....#..#......#...##.||\\n...#..|..###.#.|..|#.||..|.#.||....#|#|##...#..|.#\\n.##.#..|#|##.|...#..|.##..|.#||.#.|#..#....##.....\\n.#.#.|......|....#.....|||.||...#.#.||.|.||#|.#..|\\n.....#.#..|.|##.....|.|#|.##.#...|..#......##.|...\\n##.#.#.##|.#.||#..|.|.|.|.|#.##.|#.|...#......#||.\\n.....|..#......#.#..|##||||..|..#...#|#...|#...|##\\n....#..|..|.|...|.|...|#....#.#.|.#..||...|#.||...\\n...|..|||.#|.||.|#.##.|....#|.||.......#...#.|...#\\n....#.|.||||.....##........#.......#....|#|##....#\\n.#.|#||...|..|...|..|...##.#||...||......#.||##..#\" })\n  }\n\n  handleChange(event) {\n    this.setState({\n      text: event.target.value,\n      valid: this.validateInput(event.target.value),\n      empty: !event.target.value\n    })\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.onInputChange(this.state.text);\n  }\n  render() {\n    let warning;\n    if (!this.state.empty && !this.state.valid) {\n      warning = \"Input not valid\"\n    } else { \n      warning = \"\"\n    }\n    return (\n      <div className=\"input-box\">\n        <form className=\"input-form\" onSubmit={this.handleSubmit}>\n          <h3> Paste AoC input from <a href=\"https://adventofcode.com/2018/day/18\">day 18</a> into text box </h3>\n          <textarea\n            rows=\"25\"\n            value={this.state.text} \n            onChange={this.handleChange}/>\n          <br/>\n          <span>{warning}</span>\n          <br/>\n          <button type=\"submit\" className=\"full-btn\" disabled={!this.state.valid}>Submit</button>\n          <div className=\"flex-apart\">\n            <button type=\"button\" className=\"half-btn\" onClick={this.useDefault}>Use Default Input</button>\n            <button type=\"reset\" className=\"half-btn\" onClick={this.resetText}>Clear Input</button>\n          </div>\n        </form>\n        \n      </div>\n    )\n\n  }\n}\n\nexport default InputForm","import React, { Component } from 'react';\nimport './App.css';\nimport Grid from './components/Grid'\nimport InputForm from './components/InputForm'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      input: null,\n      display: \"display-text\",\n      groundText: \"#CCCCCC\",\n      lumberText: \"#333333\",\n      treeText: \"#666666\",\n      groundColor: \"#ecd9a3\",\n      lumberColor: \"#51371c\",\n      treeColor: \"#008f00\",\n      groundEmoji: \"〰️\" ,\n      lumberEmoji : \"⛺️\",\n      treeEmoji:  \"🌲\"\n    }\n    this.handleInputChange = this.handleInputChange.bind(this)\n    this.handleDisplayChange = this.handleDisplayChange.bind(this)\n    this.handleCustomChange = this.handleCustomChange.bind(this)\n    this.handleEmoji = this.handleEmoji.bind(this)\n  }\n\n  handleEmoji(event) {\n    this.setState({[event.target.name]: event.target.value})\n  }\n\n  handleCustomChange(event) {\n    this.setState({[event.target.name]: event.target.value})\n  }\n\n  handleDisplayChange(event) {\n    this.setState({display: event.target.value});\n  }\n\n  handleInputChange(input) {\n    this.setState({input})\n  }\n  \n  render() {\n    let Main;\n    if(this.state.input) {\n      Main = <Grid input={this.state.input}\n                      handleInputChange = {this.handleInputChange}\n                      display = {this.state.display}\n                      customText = { {\"#\": this.state.lumberText, \"|\": this.state.treeText, \".\": this.state.groundText} }\n                      customEmoji = { {\"#\": this.state.lumberEmoji, \"|\": this.state.treeEmoji, \".\": this.state.groundEmoji} }\n                      customColor = { {\"#\": this.state.lumberColor, \"|\": this.state.treeColor, \".\": this.state.groundColor} }\n                />\n    } else {\n      Main = <InputForm onInputChange={this.handleInputChange}/>  \n    }\n\n\n    let selection;\n    if (this.state.display === \"display-text\") {\n      selection = (\n      <form className=\"custom-select\">\n      <label htmlFor=\"ground-text\">Ground: </label>\n      <input type=\"color\" value={this.state.groundText} id=\"ground-text\" name=\"groundText\" onChange={this.handleCustomChange}/> \n      <label htmlFor=\"tree-text\">Tree: </label>\n      <input type=\"color\" value={this.state.treeText} id=\"tree-text\" name=\"treeText\" onChange={this.handleCustomChange}/> \n      <label htmlFor=\"lumber-text\">Lumber: </label>\n      <input type=\"color\" value={this.state.lumberText} id=\"lumber-text\" name=\"lumberText\" onChange={this.handleCustomChange}/>\n      </form>\n      )\n    } else if (this.state.display === \"display-emoji\") {\n      selection = (\n      <form className=\"custom-select\">\n        <label htmlFor=\"ground-emoji\">Ground: </label>\n        <select value={this.state.groundEmoji} id=\"ground-emoji\" name=\"groundEmoji\" onChange={this.handleEmoji}>\n          <option value=\"〰️\">{\"〰️\"}</option>\n          <option value=\"➰\">{\"➰\"}</option>\n          <option value=\"➿\">{\"➿\"}</option>\n          <option value=\"🌀\">{\"🌀\"}</option>\n          <option value=\"❗️\">{\"❗️\"}</option>\n          <option value=\"❌\">{\"❌\"}</option>\n          <option value=\"💩\">{\"💩\"}</option>\n          <option value=\"☁️\">{\"☁️\"}</option>\n          <option value=\"❤️\">{\"❤️\"}</option>\n          <option value=\"⚠️\">{\"⚠️\"}</option>\n        </select>\n\n        <label htmlFor=\"tree-emoji\">Tree: </label>\n        <select value={this.state.treeEmoji} id=\"tree-emoji\" name=\"treeEmoji\" onChange={this.handleEmoji}>\n          <option value=\"🌲\">{\"🌲\"}</option>\n          <option value=\"🎄\">{\"🎄\"}</option>\n          <option value=\"🌳\">{\"🌳\"}</option>\n          <option value=\"🌴\">{\"🌴\"}</option>\n          <option value=\"🌵\">{\"🌵\"}</option>\n          <option value=\"🌱\">{\"🌱\"}</option>\n          <option value=\"🍄\">{\"🍄\"}</option>\n          <option value=\"🌸\">{\"🌸\"}</option>\n          <option value=\"🌻\">{\"🌻\"}</option>\n          <option value=\"🦖\">{\"🦖\"}</option>\n        </select>\n\n        <label htmlFor=\"lumber-emoji\">Lumber: </label>\n        <select value={this.state.lumberEmoji} id=\"lumber-emoji\" name=\"lumberEmoji\" onChange={this.handleEmoji}>\n          <option value=\"⛺️\">{\"⛺️\"}</option>\n          <option value=\"🏕\">{\"🏕\"}</option>\n          <option value=\"🚧 \">{\"🚧\"}</option>\n          <option value=\"🗿\">{\"🗿\"}</option>\n          <option value=\"🚀\">{\"🚀\"}</option>\n          <option value=\"🌱\">{\"🌱\"}</option>\n          <option value=\"🔥\">{\"🔥\"}</option>\n          <option value=\"💥\">{\"💥\"}</option>\n          <option value=\"⭐️\">{\"⭐️\"}</option>\n          <option value=\"⚡️ \">{\"⚡️\"} </option>\n        </select>\n      </form>)\n    } else if (this.state.display === \"display-solid-color\") {\n      selection = (\n        <form className=\"custom-select\">\n        <label htmlFor=\"ground-text\">Ground: </label>\n        <input type=\"color\" value={this.state.groundColor} id=\"ground-color\" name=\"groundColor\" onChange={this.handleCustomChange}/> \n        <label htmlFor=\"tree-color\">Tree: </label>\n        <input type=\"color\" value={this.state.treeColor} id=\"tree-color\" name=\"treeColor\" onChange={this.handleCustomChange}/> \n        <label htmlFor=\"lumber-color\">Lumber: </label>\n        <input type=\"color\" value={this.state.lumberColor} id=\"lumber-color\" name=\"lumberColor\" onChange={this.handleCustomChange}/>\n        </form>\n        )\n    }\n      \n    return (\n    <div className=\"App\">\n      <h1>AOC 2018 Day 18 Visualiser <span role=\"img\">🌟 </span></h1>\n      <div className=\"customiser\">\n        <h3>Customise display</h3>\n        <form className=\"display-options\">\n          <input type=\"radio\" id=\"display-text\" name=\"display\" value=\"display-text\" \n                  checked={this.state.display === 'display-text' } onChange={this.handleDisplayChange} />\n          <label htmlFor=\"display-text\">Text</label>\n\n          <input type=\"radio\" id=\"display-emoji\" name=\"display\" value=\"display-emoji\" \n                checked={this.state.display === 'display-emoji' } onChange={this.handleDisplayChange} />\n          <label htmlFor=\"display-emoji\">Emoji</label>\n\n          <input type=\"radio\" id=\"display-solid-color\" name=\"display\" value=\"display-solid-color\" \n                checked={this.state.display === 'display-solid-color'} onChange={this.handleDisplayChange} />\n          <label htmlFor=\"display-solid-color\">Colored Squares</label>\n        </form>\n\n        {selection}\n        \n      </div>\n\n      <div> {Main} </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}